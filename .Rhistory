d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "nodes",
Group = "grp_name",
width = 400, height = 500,
#opacity = input$slider, standAlone = FALSE,
#parentElement = '#networkPlot'
)
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "nodes",
#Group = "grp_name",
width = 400, height = 500,
#opacity = input$slider, standAlone = FALSE,
#parentElement = '#networkPlot'
)
json_file <- "https://raw.github.com/christophergandrud/d3Network/master/JSONdata/miserables.json"
json_text <- paste(readLines(json_file), collapse = '')
MisLinks <- JSONtoDF(json_text, array = "links")
MisNodes <- JSONtoDF(json_text, array = "nodes")
d3ForceNetwork(Links = MisLinks,
Nodes = MisNodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
Group = "group",
opacity = 1,
file = "example_graph_force_directed.html")
str(nodes)
nodes<-data.frame(name=unique(c(as.character(airports13.filter[,1]),as.character(airports13.filter[,2]))))
nodes
str(nodes)
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "name",
#Group = "grp_name",
width = 400, height = 500,
#opacity = input$slider, standAlone = FALSE,
#parentElement = '#networkPlot'
)
str(edges)
edges$apt1_id<-apply(airports13.filter,1,function(x) which(nodes[,2] %in% x[1]))
edges$apt2_id<-apply(airports13.filter,1,function(x) which(nodes[,2] %in% x[2]))
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
edges<-airports13.filter
edges$apt1_id<-apply(airports13.filter,1,function(x) which(nodes[,2] %in% x[1]))
edges$apt2_id<-apply(airports13.filter,1,function(x) which(nodes[,2] %in% x[2]))
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
edges
edges$apt1_id<-apply(airports13.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports13.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "name",
#Group = "grp_name",
width = 400, height = 500,
#opacity = input$slider, standAlone = FALSE,
#parentElement = '#networkPlot'
)
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "name",
Group = "grp_name",
width = 400, height = 500,
opacity = input$slider, standAlone = FALSE,
parentElement = '#networkPlot'
)
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "name",
#Group = "grp_name",
width = 400, height = 500,
opacity = input$slider, standAlone = FALSE,
parentElement = '#networkPlot'
)
library(shiny)
install.packages("shiny")
library(shiny)
runApp()
head(edges$total_pax_tp)
library(shiny)
runApp()
library(shiny)
runApp()
library(shiny)
runApp()
?d3ForceNetwork
airports13.filter
airports13.filter[,c(1,4)]
write.table(nodes,"data//13_nodes.csv")
write.table(edges,"data//13_edges.csv")
nodes
runApp()
nodes<-read.csv("data//13_nodes.csv")
edges<-read.csv("data//13_edges.csv")
edges
nodes<-read.csv("data//13_nodes.csv",sep=",")
edges<-read.csv("data//13_edges.csv",sep = ",")
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "name",
#Group = "grp_name",
width = 400, height = 500,
opacity = input$slider,
zoom = T,
standAlone = FALSE,
parentElement = '#networkPlot'
)
nodes
airports13<-read.csv("data//Table_12_2_Dom_Air_Pax_Route_Analysis_2013.csv")
# filter columns
airports13.filter<-airports13[,c("apt1_apt_name","apt2_apt_name","total_pax_tp","grp_name")]
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports13.filter[,1]),as.character(airports13.filter[,2]))))
#nodes<-data.frame(id=seq(from = 1,to=length(nodes),by=1),nodes)
# assign node ids to edges
edges<-airports13.filter
edges$apt1_id<-apply(airports13.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports13.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
edges$total_pax_tp<-edges$total_pax_tp/10000
write.table(nodes,"data//13_nodes.csv",sep=",")
write.table(edges,"data//13_edges.csv",sep=",")
nodes<-read.csv("data//13_nodes.csv",sep=",")
edges<-read.csv("data//13_edges.csv",sep = ",")
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "name",
#Group = "grp_name",
width = 400, height = 500,
opacity = input$slider,
zoom = T,
standAlone = FALSE,
parentElement = '#networkPlot'
)
d3ForceNetwork(Nodes = nodes,
Links = edges,
Source = "apt1_id", Target = "apt2_id",
Value = "total_pax_tp",
NodeID = "name",
#Group = "grp_name",
width = 400, height = 500,
#opacity = input$slider,
zoom = T,
standAlone = FALSE,
parentElement = '#networkPlot'
)
runApp()
airports12<-read.csv("data//Table_12_3_Dom_Air_Pax_Route_Analysis_by_Each_Reporting_Airport_2012.csv")
str(airports12)
str(airports13)
airports13<-read.csv("data//Table_12_2_Dom_Air_Pax_Route_Analysis_2013.csv")
str(airports13)
airports12.filter<-airports12[,c("apt1_apt_name","apt2_apt_name","total_pax_tp","grp_name")]
nodes<-data.frame(name=unique(c(as.character(airports12.filter[,1]),as.character(airports12.filter[,2]))))
nodes<-data.frame(name=unique(c(as.character(airports13.filter[,1]),as.character(airports13.filter[,2]))))
#nodes<-data.frame(id=seq(from = 1,to=length(nodes),by=1),nodes)
airports13.filter<-airports13[,c("apt1_apt_name","apt2_apt_name","total_pax_tp","grp_name")]
nodes<-data.frame(name=unique(c(as.character(airports13.filter[,1]),as.character(airports13.filter[,2]))))
#nodes<-data.frame(id=seq(from = 1,to=length(nodes),by=1),nodes)
nodes<-data.frame(name=unique(c(as.character(airports12.filter[,1]),as.character(airports12.filter[,2]))))
nodes13<-data.frame(name=unique(c(as.character(airports13.filter[,1]),as.character(airports13.filter[,2]))))
#nodes<-data.frame(id=seq(from = 1,to=length(nodes),by=1),nodes)
nodes12<-data.frame(name=unique(c(as.character(airports12.filter[,1]),as.character(airports12.filter[,2]))))
str(nodes13)
!(nodes13$name %in% nodes12$name)
!(nodes12$name %in% nodes13$name)
nodes12[52]
nodes12[52,]
files<-list.files(path = "data\\input",pattern=".csv",full.names = T)
files
lapply(files,function(x){
# Load data
airports<-read.csv(x)
})
nodes<-""
# get all airport names for manual country assignment
lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp","grp_name")]
# generate unique node list with ids
nodes.append(data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))_
})
nodes<-""
# get all airport names for manual country assignment
lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp","grp_name")]
# generate unique node list with ids
nodes.append(data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2])))))
})
nodes<-""
# get all airport names for manual country assignment
lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name")]
# generate unique node list with ids
nodes.append(data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2])))))
})
nodes<-""
# get all airport names for manual country assignment
lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name")]
# generate unique node list with ids
nodes.append(data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2])))))
})
nodes<-""
# get all airport names for manual country assignment
lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name")]
# generate unique node list with ids
append(nodes,data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2])))))
})
str(nodes)
nodes<-""
# get all airport names for manual country assignment
lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name")]
# generate unique node list with ids
nodes<-append(nodes,data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2])))))
})
str(nodes)
nodes<-""
# get all airport names for manual country assignment
nodes<-lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name")]
# generate unique node list with ids
data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
})
str(nodes)
append(nodes)
do.call(c,nodes)
do.call(append,nodes)
nodes
do.call(c,nodes)
do.call(c,nodes[1])
do.call(c,nodes[2])
do.call(c,nodes[10])
do.call(c,nodes[])
nodes
str(nodes)
c(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
airports<-read.csv("data//input//Table_12_2_Dom_Air_Pax_Route_Analysis_2013.csv")
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name")]
c(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
str(c(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2])))))
nodes<-""
# get all airport names for manual country assignment
nodes<-lapply(files,function(x){
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name")]
# generate unique node list with ids
c(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
})
str(nodes)
do.call(c,nodes)
str(do.call(c,nodes))
unique(do.call(c,nodes))
all_airports<-unique(do.call(c,nodes))
write.table(all_airports,file = "data//output//airports.csv")
write.table(all_airports,file = "data//output//airports.csv",sep = ",")
airport_groups<-read.csv("data//output//airports.csv",sep=",",header=T
)
airport_groups
files
year<-grep("(\d{4})",files[1])
year<-grep("(\\d{4})",files[1])
year
grep("(\\d{4})",files[1])
?grep
grep("(\\d{4})",files[1],value=T)
sub("(\\d{4})",files[1],value=T)
gsub("(\\d{4})",files[1],value=T)
files[1]
files[regexpr("(\\d{4})",files[1],value=T)]
regexpr("(\\d{4})",files[1])
files[1][regexpr("(\\d{4})",files[1])[1]]
regexpr("(\\d{4})",files[1])[1]
files[1]
files[1][1]
substr(files[1],ind,ind+4)
ind<-regexpr("(\\d{4})",files[1])[1]
substr(files[1],ind,ind+4)
substr(files[1],ind,ind+3)
"data//output//"+year+"_nodes.csv"
airports
str(airports)
which(nodes[,c("name")] %in% airport_groups$X.1)
which(nodes[,c("name")] %in% airport_groups1,c("X.1"))
nodes
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes
which(nodes[,c("name")] %in% airport_groups1,c("X.1"))
which(nodes[,c("name")] %in% airport_groups[1,c("X.1")])
airport_groups[1,c("X.1")]
which(nodes[,c("name")] %in% airport_groups[1,c("X")])
which(airport_groups[1,c("X")] %in% nodes[,c("name")])
which(airport_groups[1,c("X")] %in% nodes[,c("name")])
which(airport_groups[,c("X")] %in% nodes[1,c("name")])
which(airport_groups[,c("X")] %in% nodes[50,c("name")])
airport_groups[which(airport_groups[,c("X")] %in% nodes[1,c("name")]),c("X.1")]
airport_groups[which(airport_groups[,c("X")] %in% nodes[50,c("name")]),c("X.1")]
apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")]
)
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
head(nodes)
head(nodes,10)
head(nodes,20)
airport_groups<-read.csv("data//output//airports.csv",sep=",",header=T)
lapply(files,function(x){
# Load data
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp")]
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
edges<-airports.filter
edges$apt1_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
# zero-index the edge id's
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
# normalise passenger number counts to prevent excessively wide edges
edges$total_pax_tp<-edges$total_pax_tp/10000
# regex year from filename
ind<-regexpr("(\\d{4})",files[1])[1]
year<-substr(files[1],ind,ind+3)
write.table(nodes,paste("data//output//",year,"_nodes.csv"),sep=",")
write.table(edges,paste("data//output//",year,"_edges.csv"),sep=",")
})
lapply(files,function(x){
# Load data
airports<-read.csv(x)
# filter columns
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp")]
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
edges<-airports.filter
edges$apt1_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
# zero-index the edge id's
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
# normalise passenger number counts to prevent excessively wide edges
edges$total_pax_tp<-edges$total_pax_tp/10000
# regex year from filename
ind<-regexpr("(\\d{4})",files[1])[1]
year<-substr(files[1],ind,ind+3)
write.table(nodes,paste("data//output//",year,"_nodes.csv"),sep=",")
write.table(edges,paste("data//output//",year,"_edges.csv"),sep=",")
})
lapply(files,function(x){
# Load data
airports<-read.csv(x)
# filter columns
try{
airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp")]
}
print(x)
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
edges<-airports.filter
edges$apt1_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
# zero-index the edge id's
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
# normalise passenger number counts to prevent excessively wide edges
edges$total_pax_tp<-edges$total_pax_tp/10000
# regex year from filename
ind<-regexpr("(\\d{4})",files[1])[1]
year<-substr(files[1],ind,ind+3)
write.table(nodes,paste("data//output//",year,"_nodes.csv"),sep=",")
write.table(edges,paste("data//output//",year,"_edges.csv"),sep=",")
})
lapply(files,function(x){
# Load data
airports<-read.csv(x)
# filter columns
try(airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp")])
print(x)
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
edges<-airports.filter
edges$apt1_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
# zero-index the edge id's
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
# normalise passenger number counts to prevent excessively wide edges
edges$total_pax_tp<-edges$total_pax_tp/10000
# regex year from filename
ind<-regexpr("(\\d{4})",files[1])[1]
year<-substr(files[1],ind,ind+3)
write.table(nodes,paste("data//output//",year,"_nodes.csv"),sep=",")
write.table(edges,paste("data//output//",year,"_edges.csv"),sep=",")
})
lapply(files,function(x){
# Load data
airports<-read.csv(x)
# filter columns
try(airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp")])
print(x)
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
edges<-airports.filter
edges$apt1_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
# zero-index the edge id's
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
# normalise passenger number counts to prevent excessively wide edges
edges$total_pax_tp<-edges$total_pax_tp/10000
# regex year from filename
ind<-regexpr("(\\d{4})",files[1])[1]
year<-substr(files[1],ind,ind+3)
write.table(nodes,paste("data//output//",year,"_nodes.csv"),sep=",")
write.table(edges,paste("data//output//",year,"_edges.csv"),sep=",")
})
for(i in files){
print(i)
}
for(x in files){
# Load data
airports<-read.csv(x)
# filter columns
try(airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp")])
print(x)
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
edges<-airports.filter
edges$apt1_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
# zero-index the edge id's
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
# normalise passenger number counts to prevent excessively wide edges
edges$total_pax_tp<-edges$total_pax_tp/10000
# regex year from filename
ind<-regexpr("(\\d{4})",files[1])[1]
year<-substr(files[1],ind,ind+3)
write.table(nodes,paste("data//output//",year,"_nodes.csv"),sep=",")
write.table(edges,paste("data//output//",year,"_edges.csv"),sep=",")
}
ind<-regexpr("(\\d{4})",x)[1]
ind
year<-substr(x,ind,ind+3)
year
for(x in files){
# Load data
airports<-read.csv(x)
# filter columns
try(airports.filter<-airports[,c("apt1_apt_name","apt2_apt_name","total_pax_tp")])
print(x)
# generate unique node list with ids
nodes<-data.frame(name=unique(c(as.character(airports.filter[,1]),as.character(airports.filter[,2]))))
nodes$country<-apply(nodes,1,function(x) airport_groups[which(airport_groups[,c("X")] %in% x["name"]),c("X.1")])
edges<-airports.filter
edges$apt1_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[1]))
edges$apt2_id<-apply(airports.filter,1,function(x) which(nodes[,c("name")] %in% x[2]))
# zero-index the edge id's
edges$apt1_id<-edges$apt1_id-1
edges$apt2_id<-edges$apt2_id-1
# normalise passenger number counts to prevent excessively wide edges
edges$total_pax_tp<-edges$total_pax_tp/10000
# regex year from filename
ind<-regexpr("(\\d{4})",x)[1]
year<-substr(x,ind,ind+3)
write.table(nodes,paste("data//output//",year,"_nodes.csv"),sep=",")
write.table(edges,paste("data//output//",year,"_edges.csv"),sep=",")
}
?try
